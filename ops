{"version":1,"ops":[{"type":1,"author":{"id":"9f2b85182a1bcd415da6a41b3724f9e789c859f0"},"timestamp":1411368084,"metadata":{"github-id":"MDU6SXNzdWU0MzQxNjM5NQ==","github-url":"https://github.com/DFHack/stonesense/issues/24","origin":"github"},"title":"Please clarify license","message":"**Could you adjust the LICENSE file to clarify which versions of the Artistic and GPL licenses you're releasing under?**\n\n...because, if you're using the original (non-clarified) version of the Artistic license or don't specify the \"or (at your option) any later version\" part, then your licenses aren't compatible with the GPL 2.0 and 3.0 licenses that 99.9%+ of GPLed code are released under.\n\n(I'd actually been meaning to do a diff between the GPL 1.0 and 2.0 to see what changed but the GPL 2.0 was released in 1991 and I'd more or less given up and assumed that all copies outside of ancient GNU tarballs had fallen off the 'net with the decline of Gopher and the FTP sites and mailing list archives of the period.)\n\n**Also, would you be willing to release `FindAllegro.cmake` under an MIT/BSD-like license?** Currently, the only non-Qt Desktop project templates Qt creator offers are for qmake and CMake and yours is the only CMake module I've been able to find for Allegro.\n\nIt'd really make things a lot simpler for people like me who've never used CMake before but want to develop Allegro apps using Qt Creator as their IDE.\n\n(**If it's not too much trouble, I'd appreciate a prompt response on the latter question since it'd allow the deliverables for my game programming course to be much cleaner and more robust.** As is, I've resigned myself to hard-coding the Allegro include and library paths in my CMakeLists.txt and including an instruction to hand-edit it because I simply don't have time to learn to write a CMake module from scratch.)","files":null}]}