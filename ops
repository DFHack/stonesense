{"version":1,"ops":[{"type":6,"author":{"id":"32726566f48b761f09e403ab8490b181c370f51b"},"timestamp":1539731877,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDE0MTIxODg4MQ=="},"target":"fcd14d85376f2db8b90ce645348c44f4c6dd0b485fc37d795fe59ec6186ee7c9","message":"System: Arch Linux 64 bit\nversion: dfhack 0.44.12-r1\n\nattempting to load stonesense via `ssense` or `stonesense` _after_ loading a map causes stonesense to not load in any visualizations, leaving a blue screen. The coordinate numbers on stonesense are the only thing that continue to update in response to keyboard controls. \n\nLoading stonesense _prior_ to loading a map allows stonesense to work for about 10 seconds before it totally freezes up. \n\nAfter that, no commands are able to be input into the dfhack console, regardless of whether stonesense is closed or not. dwarffortress continues to run, but must be shut down and restarted in order to re-enable console commands. \n\nstderr.log: http://ix.io/1pkT\n\nVideo of the issue: https://youtu.be/CSJoFzJLjAg","files":null},{"type":6,"author":{"id":"32726566f48b761f09e403ab8490b181c370f51b"},"timestamp":1546884758,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDE2ODg5MjM4MQ=="},"target":"fcd14d85376f2db8b90ce645348c44f4c6dd0b485fc37d795fe59ec6186ee7c9","message":"System: Arch Linux 64 bit\nversion: dfhack 0.44.12-r1\n\nattempting to load stonesense via `ssense` or `stonesense` _after_ loading a map causes stonesense to not load in any visualizations, leaving a blue screen. The coordinate numbers on stonesense are the only thing that continue to update in response to keyboard controls. \n\nLoading stonesense _prior_ to loading a map allows stonesense to work for about 10 seconds before it totally freezes up. \n\nAfter that, no commands are able to be input into the dfhack console, regardless of whether stonesense is closed or not. dwarffortress continues to run, but must be shut down and restarted in order to re-enable console commands. \n\nstderr.log: http://ix.io/1pkT\n\nVideo of the issue: https://youtu.be/CSJoFzJLjAg\n\nedit: this still occurs in 2019","files":null},{"type":3,"author":{"id":"a5e7bea5dfc2a9a47d11ddb1486f9e48cda694a2"},"timestamp":1540001657,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQzMTU0MDc3OQ==","github-url":"https://github.com/DFHack/stonesense/issues/64#issuecomment-431540779"},"message":"Having the **_exact same_** issues, on the exact same system. Arch Linux 64-bit, dfhack 0.44.12-r1.","files":null},{"type":3,"author":{"id":"5af3f523b61cb58bf2cc25040fdfe792ce50ed7c"},"timestamp":1541157851,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQzNTM0ODk2Mw==","github-url":"https://github.com/DFHack/stonesense/issues/64#issuecomment-435348963"},"message":"Ubuntu bionic bever 64bit\ndfhack 0.44.12-r1\n\nOn Ubuntu bionic bever and starting via 'ssense' whilst df was on the main menu causes system to become unresponsive. I had to force restart as no keys, mouse would respond.","files":null},{"type":3,"author":{"id":"cd6ffa854dead4758b6d60e2ab17aa4d6dff1eaa"},"timestamp":1559776530,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQ5OTI4OTk3MQ==","github-url":"https://github.com/DFHack/stonesense/issues/64#issuecomment-499289971"},"message":"Ditto to all. Is there any way at all to get some logging or debug traces out of stonesense so that we can at least see what it's trying to do when it goes out to lunch for no apparent reason?","files":null},{"type":3,"author":{"id":"b505cbb60ba651400190522029d45f8ed539d93a"},"timestamp":1559795938,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQ5OTM0NTMxOQ==","github-url":"https://github.com/DFHack/stonesense/issues/64#issuecomment-499345319"},"message":"I wish there were, but it's probably something to do with Allegro, which is mostly beyond our control.","files":null},{"type":3,"author":{"id":"4404dd6b7cf315800f39af6cf4e0ff516d67cc61"},"timestamp":1564267808,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDUxNTcxODg1Mw==","github-url":"https://github.com/DFHack/stonesense/issues/64#issuecomment-515718853"},"message":"I once tried to debug this, and I'm pretty sure, that it has to do with missing graphics assets. No idea, though, why it wouldn't affect other platforms the same way ...","files":null},{"type":3,"author":{"id":"0837d2558ef16c8549a041c2822e05c0efb525f8"},"timestamp":1564268566,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDUxNTcxOTQwNQ==","github-url":"https://github.com/DFHack/stonesense/issues/64#issuecomment-515719405"},"message":"Does it maybe have something to do with case sensitive filesystems on \nLinux? Other platforms will happily load a file with mismatching case, \nbut Linux will not.\n\nNote that I have not had any look at this at all.\n\nOn Jul 27, 2019 at 15:50, Herwig Hochleitner wrote:\n\u003e I once tried to debug this, and I'm pretty sure, that it has to do with missing graphics assets. No idea, though, why it wouldn't affect other platforms the same way ...\n\u003e \n\u003e -- \n\u003e You are receiving this because you are subscribed to this thread.\n\u003e Reply to this email directly or view it on GitHub:\n\u003e https://github.com/DFHack/stonesense/issues/64#issuecomment-515718853","files":null},{"type":3,"author":{"id":"5c004c6220589cd6573a54eb1c1ec869f46dfd80"},"timestamp":1573209646,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU1MTU1Mzg0MQ==","github-url":"https://github.com/DFHack/stonesense/issues/64#issuecomment-551553841"},"message":"I am having the same issue on Arch Linux, having built the latest version, all I get is a single render once I load the world, then no updates whatsoever. The only thing I noticed is some dark outline moving when pressing `\u003e` or `\u003c`.","files":null},{"type":3,"author":{"id":"7c2cc9cab9902e4b0cf0040d935247ec31e8a9dd"},"timestamp":1578776926,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU3MzM1MzI0Mw==","github-url":"https://github.com/DFHack/stonesense/issues/64#issuecomment-573353243"},"message":"I'm also having this issue on Arch Linux.\n\nLooks like the `tiletype_list_` is empty when stonesense tries to look for materials?\n\n```\n(gdb) bt\n#0  0x00007ffff67daf25 in raise () at /usr/lib/libc.so.6\n#1  0x00007ffff67c4897 in abort () at /usr/lib/libc.so.6\n#2  0x00007ffff6d5a81d in __gnu_cxx::__verbose_terminate_handler() () at /build/gcc/src/gcc/libstdc++-v3/libsupc++/vterminate.cc:95\n#3  0x00007ffff6d674da in __cxxabiv1::__terminate(void (*)()) (handler=\u003coptimized out\u003e) at /build/gcc/src/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:47\n#4  0x00007ffff6d67537 in std::terminate() () at /build/gcc/src/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:57\n#5  0x00007ffff6d6778e in __cxxabiv1::__cxa_throw(void*, std::type_info*, void (*)(void*))\n    (obj=\u003coptimized out\u003e, tinfo=0x7ffff679c4b8 \u003ctypeinfo for google::protobuf::FatalException\u003e, dest=0x7ffff676daf6 \u003cgoogle::protobuf::FatalException::~FatalException()\u003e)\n    at /build/gcc/src/gcc/libstdc++-v3/libsupc++/eh_throw.cc:95\n#6  0x00007ffff676d514 in google::protobuf::internal::LogMessage::Finish() (this=0x7fff189207e0)\n    at /home/nick/builds/dfhack/depends/protobuf/google/protobuf/stubs/common.cc:195\n#7  0x00007ffff676d564 in google::protobuf::internal::LogFinisher::operator=(google::protobuf::internal::LogMessage\u0026) (this=0x7fff189207df, other=...)\n    at /home/nick/builds/dfhack/depends/protobuf/google/protobuf/stubs/common.cc:203\n#8  0x00007fff6618ccee in google::protobuf::internal::RepeatedPtrFieldBase::Get\u003cgoogle::protobuf::RepeatedPtrField\u003cRemoteFortressReader::Tiletype\u003e::TypeHandler\u003e(int) const\n    (this=0x7fff4c001e98, index=215) at /home/nick/builds/dfhack/depends/protobuf/google/protobuf/repeated_field.h:659\n#9  0x00007fff6618c802 in google::protobuf::RepeatedPtrField\u003cRemoteFortressReader::Tiletype\u003e::Get(int) const (this=0x7fff4c001e98, index=215)\n    at /home/nick/builds/dfhack/depends/protobuf/google/protobuf/repeated_field.h:860\n#10 0x00007fff6618c61e in RemoteFortressReader::TiletypeList::tiletype_list(int) const (this=0x7fff4c001e90, index=215)\n    at /home/nick/builds/dfhack/plugins/proto/RemoteFortressReader.pb.h:10133\n#11 0x00007fff6618c204 in Tile::tileMaterial() (this=0x7ffed4256d60) at /home/nick/builds/dfhack/plugins/stonesense/Tile.cpp:852\n#12 0x00007fff661dd944 in readMaterialToTile(Tile*, unsigned int, unsigned int, df::map_block*, DFHack::t_feature const\u0026, DFHack::t_feature const\u0026, std::vector\u003cdf::block_square_event_mineralst*, std::allocator\u003cdf::block_square_event_mineralst*\u003e \u003e const\u0026, std::vector\u003cstd::vector\u003cshort, std::allocator\u003cshort\u003e \u003e, std::allocator\u003cstd::vector\u003cshort, std::allocator\u003cshort\u003e \u003e \u003e \u003e*)\n    (b=0x7ffed4256d60, lx=14, ly=15, trueBlock=0x7ffeed3e0280, local=..., global=..., veins=std::vector of length 0, capacity 0, allLayers=0x7fff18920bd0)\n    at /home/nick/builds/dfhack/plugins/stonesense/MapLoading.cpp:262\n#13 0x00007fff661de978 in readBlockToSegment(DFHack::Core\u0026, WorldSegment\u0026, int, int, int, unsigned int, unsigned int, unsigned int, unsigned int, std::vector\u003cstd::vector\u003cshort, std::allocator\u003cshort\u003e \u003e, std::allocator\u003cstd::vector\u003cshort, std::allocator\u003cshort\u003e \u003e \u003e \u003e*)\n    (DF=..., segment=..., BlockX=3, BlockY=5, BlockZ=167, BoundrySX=0, BoundrySY=0, BoundryEX=15, BoundryEY=15, allLayers=0x7fff18920bd0)\n    at /home/nick/builds/dfhack/plugins/stonesense/MapLoading.cpp:585\n#14 0x00007fff661dfb86 in readMapSegment(WorldSegment*, GameState) (segment=0x7fff74b59750, inState=...) at /home/nick/builds/dfhack/plugins/stonesense/MapLoading.cpp:875\n#15 0x00007fff661e0231 in read_segment(void*) (arg=0x0) at /home/nick/builds/dfhack/plugins/stonesense/MapLoading.cpp:1010\n#16 0x00007fff661e0310 in threadedSegment(ALLEGRO_THREAD*, void*) (read_thread=0x7ffed8c12b00, arg=0x0) at /home/nick/builds/dfhack/plugins/stonesense/MapLoading.cpp:1034\n#17 0x00007fff7c09262a in  () at /usr/lib/liballegro.so.5.2\n#18 0x00007fff7c0ccd4b in  () at /usr/lib/liballegro.so.5.2\n#19 0x00007ffff66d64cf in start_thread () at /usr/lib/libpthread.so.0\n#20 0x00007ffff689e2d3 in clone () at /usr/lib/libc.so.6\n(gdb) f 10\n#10 0x00007fff6618c61e in RemoteFortressReader::TiletypeList::tiletype_list (this=0x7fff4c001e90, index=215)\n    at /home/nick/builds/dfhack/plugins/proto/RemoteFortressReader.pb.h:10133\n10133     return tiletype_list_.Get(index);\n(gdb) p tiletype_list_\n$9 = {\n  \u003cgoogle::protobuf::internal::RepeatedPtrFieldBase\u003e = {\n    static kInitialSize = 4,\n    elements_ = 0x7fff4c001eb0,\n    current_size_ = 0,\n    allocated_size_ = 0,\n    total_size_ = 4,\n    initial_space_ = {[0] = 0xd2d2d2d2d2d2d2d2, [1] = 0xd2d2d2d2d2d2d2d2, [2] = 0xd2d2d2d2d2d2d2d2, [3] = 0xd2d2d2d2d2d2d2d2}\n  }, \u003cNo data fields\u003e}\n```","files":null},{"type":6,"author":{"id":"7c2cc9cab9902e4b0cf0040d935247ec31e8a9dd"},"timestamp":1578776926,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDMzNjI0NTEyNg=="},"target":"04bd180617fe7ab7798cfc8f33e380d98597350a948349f28003c029575a8abb","message":"I'm also having this issue on Arch Linux.\n\nLooks like the `tiletype_list_` is empty when stonesense tries to look for materials?\n\n```\n(gdb) bt\n#0  0x00007ffff67daf25 in raise () at /usr/lib/libc.so.6\n#1  0x00007ffff67c4897 in abort () at /usr/lib/libc.so.6\n#2  0x00007ffff6d5a81d in __gnu_cxx::__verbose_terminate_handler() () at /build/gcc/src/gcc/libstdc++-v3/libsupc++/vterminate.cc:95\n#3  0x00007ffff6d674da in __cxxabiv1::__terminate(void (*)()) (handler=\u003coptimized out\u003e) at /build/gcc/src/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:47\n#4  0x00007ffff6d67537 in std::terminate() () at /build/gcc/src/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:57\n#5  0x00007ffff6d6778e in __cxxabiv1::__cxa_throw(void*, std::type_info*, void (*)(void*))\n    (obj=\u003coptimized out\u003e, tinfo=0x7ffff679c4b8 \u003ctypeinfo for google::protobuf::FatalException\u003e, dest=0x7ffff676daf6 \u003cgoogle::protobuf::FatalException::~FatalException()\u003e)\n    at /build/gcc/src/gcc/libstdc++-v3/libsupc++/eh_throw.cc:95\n#6  0x00007ffff676d514 in google::protobuf::internal::LogMessage::Finish() (this=0x7fff189207e0)\n    at /home/nick/builds/dfhack/depends/protobuf/google/protobuf/stubs/common.cc:195\n#7  0x00007ffff676d564 in google::protobuf::internal::LogFinisher::operator=(google::protobuf::internal::LogMessage\u0026) (this=0x7fff189207df, other=...)\n    at /home/nick/builds/dfhack/depends/protobuf/google/protobuf/stubs/common.cc:203\n#8  0x00007fff6618ccee in google::protobuf::internal::RepeatedPtrFieldBase::Get\u003cgoogle::protobuf::RepeatedPtrField\u003cRemoteFortressReader::Tiletype\u003e::TypeHandler\u003e(int) const\n    (this=0x7fff4c001e98, index=215) at /home/nick/builds/dfhack/depends/protobuf/google/protobuf/repeated_field.h:659\n#9  0x00007fff6618c802 in google::protobuf::RepeatedPtrField\u003cRemoteFortressReader::Tiletype\u003e::Get(int) const (this=0x7fff4c001e98, index=215)\n    at /home/nick/builds/dfhack/depends/protobuf/google/protobuf/repeated_field.h:860\n#10 0x00007fff6618c61e in RemoteFortressReader::TiletypeList::tiletype_list(int) const (this=0x7fff4c001e90, index=215)\n    at /home/nick/builds/dfhack/plugins/proto/RemoteFortressReader.pb.h:10133\n#11 0x00007fff6618c204 in Tile::tileMaterial() (this=0x7ffed4256d60) at /home/nick/builds/dfhack/plugins/stonesense/Tile.cpp:852\n#12 0x00007fff661dd944 in readMaterialToTile(Tile*, unsigned int, unsigned int, df::map_block*, DFHack::t_feature const\u0026, DFHack::t_feature const\u0026, std::vector\u003cdf::block_square_event_mineralst*, std::allocator\u003cdf::block_square_event_mineralst*\u003e \u003e const\u0026, std::vector\u003cstd::vector\u003cshort, std::allocator\u003cshort\u003e \u003e, std::allocator\u003cstd::vector\u003cshort, std::allocator\u003cshort\u003e \u003e \u003e \u003e*)\n    (b=0x7ffed4256d60, lx=14, ly=15, trueBlock=0x7ffeed3e0280, local=..., global=..., veins=std::vector of length 0, capacity 0, allLayers=0x7fff18920bd0)\n    at /home/nick/builds/dfhack/plugins/stonesense/MapLoading.cpp:262\n#13 0x00007fff661de978 in readBlockToSegment(DFHack::Core\u0026, WorldSegment\u0026, int, int, int, unsigned int, unsigned int, unsigned int, unsigned int, std::vector\u003cstd::vector\u003cshort, std::allocator\u003cshort\u003e \u003e, std::allocator\u003cstd::vector\u003cshort, std::allocator\u003cshort\u003e \u003e \u003e \u003e*)\n    (DF=..., segment=..., BlockX=3, BlockY=5, BlockZ=167, BoundrySX=0, BoundrySY=0, BoundryEX=15, BoundryEY=15, allLayers=0x7fff18920bd0)\n    at /home/nick/builds/dfhack/plugins/stonesense/MapLoading.cpp:585\n#14 0x00007fff661dfb86 in readMapSegment(WorldSegment*, GameState) (segment=0x7fff74b59750, inState=...) at /home/nick/builds/dfhack/plugins/stonesense/MapLoading.cpp:875\n#15 0x00007fff661e0231 in read_segment(void*) (arg=0x0) at /home/nick/builds/dfhack/plugins/stonesense/MapLoading.cpp:1010\n#16 0x00007fff661e0310 in threadedSegment(ALLEGRO_THREAD*, void*) (read_thread=0x7ffed8c12b00, arg=0x0) at /home/nick/builds/dfhack/plugins/stonesense/MapLoading.cpp:1034\n#17 0x00007fff7c09262a in  () at /usr/lib/liballegro.so.5.2\n#18 0x00007fff7c0ccd4b in  () at /usr/lib/liballegro.so.5.2\n#19 0x00007ffff66d64cf in start_thread () at /usr/lib/libpthread.so.0\n#20 0x00007ffff689e2d3 in clone () at /usr/lib/libc.so.6\n(gdb) f 10\n#10 0x00007fff6618c61e in RemoteFortressReader::TiletypeList::tiletype_list (this=0x7fff4c001e90, index=215)\n    at /home/nick/builds/dfhack/plugins/proto/RemoteFortressReader.pb.h:10133\n10133     return tiletype_list_.Get(index);\n(gdb) p tiletype_list_\n$9 = {\n  \u003cgoogle::protobuf::internal::RepeatedPtrFieldBase\u003e = {\n    static kInitialSize = 4,\n    elements_ = 0x7fff4c001eb0,\n    current_size_ = 0,\n    allocated_size_ = 0,\n    total_size_ = 4,\n    initial_space_ = {[0] = 0xd2d2d2d2d2d2d2d2, [1] = 0xd2d2d2d2d2d2d2d2, [2] = 0xd2d2d2d2d2d2d2d2, [3] = 0xd2d2d2d2d2d2d2d2}\n  }, \u003cNo data fields\u003e}\n```\n\nedit: I put a breakpoint in stonesense ContentLoader:103, `materialNameList.material_list_size()` is 0. So I guess stonesense isn't getting the materials, etc. from RemoteFortressReader?","files":null},{"type":6,"author":{"id":"7c2cc9cab9902e4b0cf0040d935247ec31e8a9dd"},"timestamp":1578777899,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDMzNjI0NzE0Mw=="},"target":"04bd180617fe7ab7798cfc8f33e380d98597350a948349f28003c029575a8abb","message":"I'm also having this issue on Arch Linux.\n\nLooks like the `tiletype_list_` is empty when stonesense tries to look for materials?\n\n```\n(gdb) bt\n#0  0x00007ffff67daf25 in raise () at /usr/lib/libc.so.6\n#1  0x00007ffff67c4897 in abort () at /usr/lib/libc.so.6\n#2  0x00007ffff6d5a81d in __gnu_cxx::__verbose_terminate_handler() () at /build/gcc/src/gcc/libstdc++-v3/libsupc++/vterminate.cc:95\n#3  0x00007ffff6d674da in __cxxabiv1::__terminate(void (*)()) (handler=\u003coptimized out\u003e) at /build/gcc/src/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:47\n#4  0x00007ffff6d67537 in std::terminate() () at /build/gcc/src/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:57\n#5  0x00007ffff6d6778e in __cxxabiv1::__cxa_throw(void*, std::type_info*, void (*)(void*))\n    (obj=\u003coptimized out\u003e, tinfo=0x7ffff679c4b8 \u003ctypeinfo for google::protobuf::FatalException\u003e, dest=0x7ffff676daf6 \u003cgoogle::protobuf::FatalException::~FatalException()\u003e)\n    at /build/gcc/src/gcc/libstdc++-v3/libsupc++/eh_throw.cc:95\n#6  0x00007ffff676d514 in google::protobuf::internal::LogMessage::Finish() (this=0x7fff189207e0)\n    at /home/nick/builds/dfhack/depends/protobuf/google/protobuf/stubs/common.cc:195\n#7  0x00007ffff676d564 in google::protobuf::internal::LogFinisher::operator=(google::protobuf::internal::LogMessage\u0026) (this=0x7fff189207df, other=...)\n    at /home/nick/builds/dfhack/depends/protobuf/google/protobuf/stubs/common.cc:203\n#8  0x00007fff6618ccee in google::protobuf::internal::RepeatedPtrFieldBase::Get\u003cgoogle::protobuf::RepeatedPtrField\u003cRemoteFortressReader::Tiletype\u003e::TypeHandler\u003e(int) const\n    (this=0x7fff4c001e98, index=215) at /home/nick/builds/dfhack/depends/protobuf/google/protobuf/repeated_field.h:659\n#9  0x00007fff6618c802 in google::protobuf::RepeatedPtrField\u003cRemoteFortressReader::Tiletype\u003e::Get(int) const (this=0x7fff4c001e98, index=215)\n    at /home/nick/builds/dfhack/depends/protobuf/google/protobuf/repeated_field.h:860\n#10 0x00007fff6618c61e in RemoteFortressReader::TiletypeList::tiletype_list(int) const (this=0x7fff4c001e90, index=215)\n    at /home/nick/builds/dfhack/plugins/proto/RemoteFortressReader.pb.h:10133\n#11 0x00007fff6618c204 in Tile::tileMaterial() (this=0x7ffed4256d60) at /home/nick/builds/dfhack/plugins/stonesense/Tile.cpp:852\n#12 0x00007fff661dd944 in readMaterialToTile(Tile*, unsigned int, unsigned int, df::map_block*, DFHack::t_feature const\u0026, DFHack::t_feature const\u0026, std::vector\u003cdf::block_square_event_mineralst*, std::allocator\u003cdf::block_square_event_mineralst*\u003e \u003e const\u0026, std::vector\u003cstd::vector\u003cshort, std::allocator\u003cshort\u003e \u003e, std::allocator\u003cstd::vector\u003cshort, std::allocator\u003cshort\u003e \u003e \u003e \u003e*)\n    (b=0x7ffed4256d60, lx=14, ly=15, trueBlock=0x7ffeed3e0280, local=..., global=..., veins=std::vector of length 0, capacity 0, allLayers=0x7fff18920bd0)\n    at /home/nick/builds/dfhack/plugins/stonesense/MapLoading.cpp:262\n#13 0x00007fff661de978 in readBlockToSegment(DFHack::Core\u0026, WorldSegment\u0026, int, int, int, unsigned int, unsigned int, unsigned int, unsigned int, std::vector\u003cstd::vector\u003cshort, std::allocator\u003cshort\u003e \u003e, std::allocator\u003cstd::vector\u003cshort, std::allocator\u003cshort\u003e \u003e \u003e \u003e*)\n    (DF=..., segment=..., BlockX=3, BlockY=5, BlockZ=167, BoundrySX=0, BoundrySY=0, BoundryEX=15, BoundryEY=15, allLayers=0x7fff18920bd0)\n    at /home/nick/builds/dfhack/plugins/stonesense/MapLoading.cpp:585\n#14 0x00007fff661dfb86 in readMapSegment(WorldSegment*, GameState) (segment=0x7fff74b59750, inState=...) at /home/nick/builds/dfhack/plugins/stonesense/MapLoading.cpp:875\n#15 0x00007fff661e0231 in read_segment(void*) (arg=0x0) at /home/nick/builds/dfhack/plugins/stonesense/MapLoading.cpp:1010\n#16 0x00007fff661e0310 in threadedSegment(ALLEGRO_THREAD*, void*) (read_thread=0x7ffed8c12b00, arg=0x0) at /home/nick/builds/dfhack/plugins/stonesense/MapLoading.cpp:1034\n#17 0x00007fff7c09262a in  () at /usr/lib/liballegro.so.5.2\n#18 0x00007fff7c0ccd4b in  () at /usr/lib/liballegro.so.5.2\n#19 0x00007ffff66d64cf in start_thread () at /usr/lib/libpthread.so.0\n#20 0x00007ffff689e2d3 in clone () at /usr/lib/libc.so.6\n(gdb) f 10\n#10 0x00007fff6618c61e in RemoteFortressReader::TiletypeList::tiletype_list (this=0x7fff4c001e90, index=215)\n    at /home/nick/builds/dfhack/plugins/proto/RemoteFortressReader.pb.h:10133\n10133     return tiletype_list_.Get(index);\n(gdb) p tiletype_list_\n$9 = {\n  \u003cgoogle::protobuf::internal::RepeatedPtrFieldBase\u003e = {\n    static kInitialSize = 4,\n    elements_ = 0x7fff4c001eb0,\n    current_size_ = 0,\n    allocated_size_ = 0,\n    total_size_ = 4,\n    initial_space_ = {[0] = 0xd2d2d2d2d2d2d2d2, [1] = 0xd2d2d2d2d2d2d2d2, [2] = 0xd2d2d2d2d2d2d2d2, [3] = 0xd2d2d2d2d2d2d2d2}\n  }, \u003cNo data fields\u003e}\n```\n\nedit: I put a breakpoint in stonesense ContentLoader:103, `materialNameList.material_list_size()` is 0. So I guess stonesense isn't getting the materials, etc. from RemoteFortressReader?\n\nedit2: okay so just ignore this comment.... I had web server for work already open on port 5000 so dfhack couldn't bind to that port....","files":null},{"type":6,"author":{"id":"7c2cc9cab9902e4b0cf0040d935247ec31e8a9dd"},"timestamp":1578778138,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDMzNjI0NzU0MA=="},"target":"04bd180617fe7ab7798cfc8f33e380d98597350a948349f28003c029575a8abb","message":"I'm also having this issue on Arch Linux.\n\nLooks like the `tiletype_list_` is empty when stonesense tries to look for materials?\n\n```\n(gdb) bt\n#0  0x00007ffff67daf25 in raise () at /usr/lib/libc.so.6\n#1  0x00007ffff67c4897 in abort () at /usr/lib/libc.so.6\n#2  0x00007ffff6d5a81d in __gnu_cxx::__verbose_terminate_handler() () at /build/gcc/src/gcc/libstdc++-v3/libsupc++/vterminate.cc:95\n#3  0x00007ffff6d674da in __cxxabiv1::__terminate(void (*)()) (handler=\u003coptimized out\u003e) at /build/gcc/src/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:47\n#4  0x00007ffff6d67537 in std::terminate() () at /build/gcc/src/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:57\n#5  0x00007ffff6d6778e in __cxxabiv1::__cxa_throw(void*, std::type_info*, void (*)(void*))\n    (obj=\u003coptimized out\u003e, tinfo=0x7ffff679c4b8 \u003ctypeinfo for google::protobuf::FatalException\u003e, dest=0x7ffff676daf6 \u003cgoogle::protobuf::FatalException::~FatalException()\u003e)\n    at /build/gcc/src/gcc/libstdc++-v3/libsupc++/eh_throw.cc:95\n#6  0x00007ffff676d514 in google::protobuf::internal::LogMessage::Finish() (this=0x7fff189207e0)\n    at /home/nick/builds/dfhack/depends/protobuf/google/protobuf/stubs/common.cc:195\n#7  0x00007ffff676d564 in google::protobuf::internal::LogFinisher::operator=(google::protobuf::internal::LogMessage\u0026) (this=0x7fff189207df, other=...)\n    at /home/nick/builds/dfhack/depends/protobuf/google/protobuf/stubs/common.cc:203\n#8  0x00007fff6618ccee in google::protobuf::internal::RepeatedPtrFieldBase::Get\u003cgoogle::protobuf::RepeatedPtrField\u003cRemoteFortressReader::Tiletype\u003e::TypeHandler\u003e(int) const\n    (this=0x7fff4c001e98, index=215) at /home/nick/builds/dfhack/depends/protobuf/google/protobuf/repeated_field.h:659\n#9  0x00007fff6618c802 in google::protobuf::RepeatedPtrField\u003cRemoteFortressReader::Tiletype\u003e::Get(int) const (this=0x7fff4c001e98, index=215)\n    at /home/nick/builds/dfhack/depends/protobuf/google/protobuf/repeated_field.h:860\n#10 0x00007fff6618c61e in RemoteFortressReader::TiletypeList::tiletype_list(int) const (this=0x7fff4c001e90, index=215)\n    at /home/nick/builds/dfhack/plugins/proto/RemoteFortressReader.pb.h:10133\n#11 0x00007fff6618c204 in Tile::tileMaterial() (this=0x7ffed4256d60) at /home/nick/builds/dfhack/plugins/stonesense/Tile.cpp:852\n#12 0x00007fff661dd944 in readMaterialToTile(Tile*, unsigned int, unsigned int, df::map_block*, DFHack::t_feature const\u0026, DFHack::t_feature const\u0026, std::vector\u003cdf::block_square_event_mineralst*, std::allocator\u003cdf::block_square_event_mineralst*\u003e \u003e const\u0026, std::vector\u003cstd::vector\u003cshort, std::allocator\u003cshort\u003e \u003e, std::allocator\u003cstd::vector\u003cshort, std::allocator\u003cshort\u003e \u003e \u003e \u003e*)\n    (b=0x7ffed4256d60, lx=14, ly=15, trueBlock=0x7ffeed3e0280, local=..., global=..., veins=std::vector of length 0, capacity 0, allLayers=0x7fff18920bd0)\n    at /home/nick/builds/dfhack/plugins/stonesense/MapLoading.cpp:262\n#13 0x00007fff661de978 in readBlockToSegment(DFHack::Core\u0026, WorldSegment\u0026, int, int, int, unsigned int, unsigned int, unsigned int, unsigned int, std::vector\u003cstd::vector\u003cshort, std::allocator\u003cshort\u003e \u003e, std::allocator\u003cstd::vector\u003cshort, std::allocator\u003cshort\u003e \u003e \u003e \u003e*)\n    (DF=..., segment=..., BlockX=3, BlockY=5, BlockZ=167, BoundrySX=0, BoundrySY=0, BoundryEX=15, BoundryEY=15, allLayers=0x7fff18920bd0)\n    at /home/nick/builds/dfhack/plugins/stonesense/MapLoading.cpp:585\n#14 0x00007fff661dfb86 in readMapSegment(WorldSegment*, GameState) (segment=0x7fff74b59750, inState=...) at /home/nick/builds/dfhack/plugins/stonesense/MapLoading.cpp:875\n#15 0x00007fff661e0231 in read_segment(void*) (arg=0x0) at /home/nick/builds/dfhack/plugins/stonesense/MapLoading.cpp:1010\n#16 0x00007fff661e0310 in threadedSegment(ALLEGRO_THREAD*, void*) (read_thread=0x7ffed8c12b00, arg=0x0) at /home/nick/builds/dfhack/plugins/stonesense/MapLoading.cpp:1034\n#17 0x00007fff7c09262a in  () at /usr/lib/liballegro.so.5.2\n#18 0x00007fff7c0ccd4b in  () at /usr/lib/liballegro.so.5.2\n#19 0x00007ffff66d64cf in start_thread () at /usr/lib/libpthread.so.0\n#20 0x00007ffff689e2d3 in clone () at /usr/lib/libc.so.6\n(gdb) f 10\n#10 0x00007fff6618c61e in RemoteFortressReader::TiletypeList::tiletype_list (this=0x7fff4c001e90, index=215)\n    at /home/nick/builds/dfhack/plugins/proto/RemoteFortressReader.pb.h:10133\n10133     return tiletype_list_.Get(index);\n(gdb) p tiletype_list_\n$9 = {\n  \u003cgoogle::protobuf::internal::RepeatedPtrFieldBase\u003e = {\n    static kInitialSize = 4,\n    elements_ = 0x7fff4c001eb0,\n    current_size_ = 0,\n    allocated_size_ = 0,\n    total_size_ = 4,\n    initial_space_ = {[0] = 0xd2d2d2d2d2d2d2d2, [1] = 0xd2d2d2d2d2d2d2d2, [2] = 0xd2d2d2d2d2d2d2d2, [3] = 0xd2d2d2d2d2d2d2d2}\n  }, \u003cNo data fields\u003e}\n```\n\nedit: I put a breakpoint in stonesense ContentLoader:103, `materialNameList.material_list_size()` is 0. So I guess stonesense isn't getting the materials, etc. from RemoteFortressReader?\n\nedit2: okay so just ignore this comment.... I had web server for work already open on port 5000 so dfhack couldn't bind to that port.... Stonesense still isn't working though.","files":null},{"type":6,"author":{"id":"7c2cc9cab9902e4b0cf0040d935247ec31e8a9dd"},"timestamp":1578778455,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDMzNjI0ODA5Mw=="},"target":"04bd180617fe7ab7798cfc8f33e380d98597350a948349f28003c029575a8abb","message":"I'm also having this issue on Arch Linux.\n\nLooks like the `tiletype_list_` is empty when stonesense tries to look for materials?\n\n```\n(gdb) bt\n#0  0x00007ffff67daf25 in raise () at /usr/lib/libc.so.6\n#1  0x00007ffff67c4897 in abort () at /usr/lib/libc.so.6\n#2  0x00007ffff6d5a81d in __gnu_cxx::__verbose_terminate_handler() () at /build/gcc/src/gcc/libstdc++-v3/libsupc++/vterminate.cc:95\n#3  0x00007ffff6d674da in __cxxabiv1::__terminate(void (*)()) (handler=\u003coptimized out\u003e) at /build/gcc/src/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:47\n#4  0x00007ffff6d67537 in std::terminate() () at /build/gcc/src/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:57\n#5  0x00007ffff6d6778e in __cxxabiv1::__cxa_throw(void*, std::type_info*, void (*)(void*))\n    (obj=\u003coptimized out\u003e, tinfo=0x7ffff679c4b8 \u003ctypeinfo for google::protobuf::FatalException\u003e, dest=0x7ffff676daf6 \u003cgoogle::protobuf::FatalException::~FatalException()\u003e)\n    at /build/gcc/src/gcc/libstdc++-v3/libsupc++/eh_throw.cc:95\n#6  0x00007ffff676d514 in google::protobuf::internal::LogMessage::Finish() (this=0x7fff189207e0)\n    at /home/nick/builds/dfhack/depends/protobuf/google/protobuf/stubs/common.cc:195\n#7  0x00007ffff676d564 in google::protobuf::internal::LogFinisher::operator=(google::protobuf::internal::LogMessage\u0026) (this=0x7fff189207df, other=...)\n    at /home/nick/builds/dfhack/depends/protobuf/google/protobuf/stubs/common.cc:203\n#8  0x00007fff6618ccee in google::protobuf::internal::RepeatedPtrFieldBase::Get\u003cgoogle::protobuf::RepeatedPtrField\u003cRemoteFortressReader::Tiletype\u003e::TypeHandler\u003e(int) const\n    (this=0x7fff4c001e98, index=215) at /home/nick/builds/dfhack/depends/protobuf/google/protobuf/repeated_field.h:659\n#9  0x00007fff6618c802 in google::protobuf::RepeatedPtrField\u003cRemoteFortressReader::Tiletype\u003e::Get(int) const (this=0x7fff4c001e98, index=215)\n    at /home/nick/builds/dfhack/depends/protobuf/google/protobuf/repeated_field.h:860\n#10 0x00007fff6618c61e in RemoteFortressReader::TiletypeList::tiletype_list(int) const (this=0x7fff4c001e90, index=215)\n    at /home/nick/builds/dfhack/plugins/proto/RemoteFortressReader.pb.h:10133\n#11 0x00007fff6618c204 in Tile::tileMaterial() (this=0x7ffed4256d60) at /home/nick/builds/dfhack/plugins/stonesense/Tile.cpp:852\n#12 0x00007fff661dd944 in readMaterialToTile(Tile*, unsigned int, unsigned int, df::map_block*, DFHack::t_feature const\u0026, DFHack::t_feature const\u0026, std::vector\u003cdf::block_square_event_mineralst*, std::allocator\u003cdf::block_square_event_mineralst*\u003e \u003e const\u0026, std::vector\u003cstd::vector\u003cshort, std::allocator\u003cshort\u003e \u003e, std::allocator\u003cstd::vector\u003cshort, std::allocator\u003cshort\u003e \u003e \u003e \u003e*)\n    (b=0x7ffed4256d60, lx=14, ly=15, trueBlock=0x7ffeed3e0280, local=..., global=..., veins=std::vector of length 0, capacity 0, allLayers=0x7fff18920bd0)\n    at /home/nick/builds/dfhack/plugins/stonesense/MapLoading.cpp:262\n#13 0x00007fff661de978 in readBlockToSegment(DFHack::Core\u0026, WorldSegment\u0026, int, int, int, unsigned int, unsigned int, unsigned int, unsigned int, std::vector\u003cstd::vector\u003cshort, std::allocator\u003cshort\u003e \u003e, std::allocator\u003cstd::vector\u003cshort, std::allocator\u003cshort\u003e \u003e \u003e \u003e*)\n    (DF=..., segment=..., BlockX=3, BlockY=5, BlockZ=167, BoundrySX=0, BoundrySY=0, BoundryEX=15, BoundryEY=15, allLayers=0x7fff18920bd0)\n    at /home/nick/builds/dfhack/plugins/stonesense/MapLoading.cpp:585\n#14 0x00007fff661dfb86 in readMapSegment(WorldSegment*, GameState) (segment=0x7fff74b59750, inState=...) at /home/nick/builds/dfhack/plugins/stonesense/MapLoading.cpp:875\n#15 0x00007fff661e0231 in read_segment(void*) (arg=0x0) at /home/nick/builds/dfhack/plugins/stonesense/MapLoading.cpp:1010\n#16 0x00007fff661e0310 in threadedSegment(ALLEGRO_THREAD*, void*) (read_thread=0x7ffed8c12b00, arg=0x0) at /home/nick/builds/dfhack/plugins/stonesense/MapLoading.cpp:1034\n#17 0x00007fff7c09262a in  () at /usr/lib/liballegro.so.5.2\n#18 0x00007fff7c0ccd4b in  () at /usr/lib/liballegro.so.5.2\n#19 0x00007ffff66d64cf in start_thread () at /usr/lib/libpthread.so.0\n#20 0x00007ffff689e2d3 in clone () at /usr/lib/libc.so.6\n(gdb) f 10\n#10 0x00007fff6618c61e in RemoteFortressReader::TiletypeList::tiletype_list (this=0x7fff4c001e90, index=215)\n    at /home/nick/builds/dfhack/plugins/proto/RemoteFortressReader.pb.h:10133\n10133     return tiletype_list_.Get(index);\n(gdb) p tiletype_list_\n$9 = {\n  \u003cgoogle::protobuf::internal::RepeatedPtrFieldBase\u003e = {\n    static kInitialSize = 4,\n    elements_ = 0x7fff4c001eb0,\n    current_size_ = 0,\n    allocated_size_ = 0,\n    total_size_ = 4,\n    initial_space_ = {[0] = 0xd2d2d2d2d2d2d2d2, [1] = 0xd2d2d2d2d2d2d2d2, [2] = 0xd2d2d2d2d2d2d2d2, [3] = 0xd2d2d2d2d2d2d2d2}\n  }, \u003cNo data fields\u003e}\n```\n\nedit: I put a breakpoint in stonesense ContentLoader:103, `materialNameList.material_list_size()` is 0. So I guess stonesense isn't getting the materials, etc. from RemoteFortressReader?\n\nedit2: okay so just ignore this comment.... I had web server for work already open on port 5000 so dfhack couldn't bind to that port.... Stonesense still isn't working though. \n\nedit3: wtf! my locally compiled stonesense/dfhack doesn't work, but the linux release version does... I can't believe I lost all that time debugging that. Oh well, at least losing is fun.","files":null},{"type":6,"author":{"id":"7c2cc9cab9902e4b0cf0040d935247ec31e8a9dd"},"timestamp":1578779671,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDMzNjI1MDA5OA=="},"target":"04bd180617fe7ab7798cfc8f33e380d98597350a948349f28003c029575a8abb","message":"I'm also having this issue on Arch Linux.\n\nLooks like the `tiletype_list_` is empty when stonesense tries to look for materials?\n\n```\n(gdb) bt\n#0  0x00007ffff67daf25 in raise () at /usr/lib/libc.so.6\n#1  0x00007ffff67c4897 in abort () at /usr/lib/libc.so.6\n#2  0x00007ffff6d5a81d in __gnu_cxx::__verbose_terminate_handler() () at /build/gcc/src/gcc/libstdc++-v3/libsupc++/vterminate.cc:95\n#3  0x00007ffff6d674da in __cxxabiv1::__terminate(void (*)()) (handler=\u003coptimized out\u003e) at /build/gcc/src/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:47\n#4  0x00007ffff6d67537 in std::terminate() () at /build/gcc/src/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:57\n#5  0x00007ffff6d6778e in __cxxabiv1::__cxa_throw(void*, std::type_info*, void (*)(void*))\n    (obj=\u003coptimized out\u003e, tinfo=0x7ffff679c4b8 \u003ctypeinfo for google::protobuf::FatalException\u003e, dest=0x7ffff676daf6 \u003cgoogle::protobuf::FatalException::~FatalException()\u003e)\n    at /build/gcc/src/gcc/libstdc++-v3/libsupc++/eh_throw.cc:95\n#6  0x00007ffff676d514 in google::protobuf::internal::LogMessage::Finish() (this=0x7fff189207e0)\n    at /home/nick/builds/dfhack/depends/protobuf/google/protobuf/stubs/common.cc:195\n#7  0x00007ffff676d564 in google::protobuf::internal::LogFinisher::operator=(google::protobuf::internal::LogMessage\u0026) (this=0x7fff189207df, other=...)\n    at /home/nick/builds/dfhack/depends/protobuf/google/protobuf/stubs/common.cc:203\n#8  0x00007fff6618ccee in google::protobuf::internal::RepeatedPtrFieldBase::Get\u003cgoogle::protobuf::RepeatedPtrField\u003cRemoteFortressReader::Tiletype\u003e::TypeHandler\u003e(int) const\n    (this=0x7fff4c001e98, index=215) at /home/nick/builds/dfhack/depends/protobuf/google/protobuf/repeated_field.h:659\n#9  0x00007fff6618c802 in google::protobuf::RepeatedPtrField\u003cRemoteFortressReader::Tiletype\u003e::Get(int) const (this=0x7fff4c001e98, index=215)\n    at /home/nick/builds/dfhack/depends/protobuf/google/protobuf/repeated_field.h:860\n#10 0x00007fff6618c61e in RemoteFortressReader::TiletypeList::tiletype_list(int) const (this=0x7fff4c001e90, index=215)\n    at /home/nick/builds/dfhack/plugins/proto/RemoteFortressReader.pb.h:10133\n#11 0x00007fff6618c204 in Tile::tileMaterial() (this=0x7ffed4256d60) at /home/nick/builds/dfhack/plugins/stonesense/Tile.cpp:852\n#12 0x00007fff661dd944 in readMaterialToTile(Tile*, unsigned int, unsigned int, df::map_block*, DFHack::t_feature const\u0026, DFHack::t_feature const\u0026, std::vector\u003cdf::block_square_event_mineralst*, std::allocator\u003cdf::block_square_event_mineralst*\u003e \u003e const\u0026, std::vector\u003cstd::vector\u003cshort, std::allocator\u003cshort\u003e \u003e, std::allocator\u003cstd::vector\u003cshort, std::allocator\u003cshort\u003e \u003e \u003e \u003e*)\n    (b=0x7ffed4256d60, lx=14, ly=15, trueBlock=0x7ffeed3e0280, local=..., global=..., veins=std::vector of length 0, capacity 0, allLayers=0x7fff18920bd0)\n    at /home/nick/builds/dfhack/plugins/stonesense/MapLoading.cpp:262\n#13 0x00007fff661de978 in readBlockToSegment(DFHack::Core\u0026, WorldSegment\u0026, int, int, int, unsigned int, unsigned int, unsigned int, unsigned int, std::vector\u003cstd::vector\u003cshort, std::allocator\u003cshort\u003e \u003e, std::allocator\u003cstd::vector\u003cshort, std::allocator\u003cshort\u003e \u003e \u003e \u003e*)\n    (DF=..., segment=..., BlockX=3, BlockY=5, BlockZ=167, BoundrySX=0, BoundrySY=0, BoundryEX=15, BoundryEY=15, allLayers=0x7fff18920bd0)\n    at /home/nick/builds/dfhack/plugins/stonesense/MapLoading.cpp:585\n#14 0x00007fff661dfb86 in readMapSegment(WorldSegment*, GameState) (segment=0x7fff74b59750, inState=...) at /home/nick/builds/dfhack/plugins/stonesense/MapLoading.cpp:875\n#15 0x00007fff661e0231 in read_segment(void*) (arg=0x0) at /home/nick/builds/dfhack/plugins/stonesense/MapLoading.cpp:1010\n#16 0x00007fff661e0310 in threadedSegment(ALLEGRO_THREAD*, void*) (read_thread=0x7ffed8c12b00, arg=0x0) at /home/nick/builds/dfhack/plugins/stonesense/MapLoading.cpp:1034\n#17 0x00007fff7c09262a in  () at /usr/lib/liballegro.so.5.2\n#18 0x00007fff7c0ccd4b in  () at /usr/lib/liballegro.so.5.2\n#19 0x00007ffff66d64cf in start_thread () at /usr/lib/libpthread.so.0\n#20 0x00007ffff689e2d3 in clone () at /usr/lib/libc.so.6\n(gdb) f 10\n#10 0x00007fff6618c61e in RemoteFortressReader::TiletypeList::tiletype_list (this=0x7fff4c001e90, index=215)\n    at /home/nick/builds/dfhack/plugins/proto/RemoteFortressReader.pb.h:10133\n10133     return tiletype_list_.Get(index);\n(gdb) p tiletype_list_\n$9 = {\n  \u003cgoogle::protobuf::internal::RepeatedPtrFieldBase\u003e = {\n    static kInitialSize = 4,\n    elements_ = 0x7fff4c001eb0,\n    current_size_ = 0,\n    allocated_size_ = 0,\n    total_size_ = 4,\n    initial_space_ = {[0] = 0xd2d2d2d2d2d2d2d2, [1] = 0xd2d2d2d2d2d2d2d2, [2] = 0xd2d2d2d2d2d2d2d2, [3] = 0xd2d2d2d2d2d2d2d2}\n  }, \u003cNo data fields\u003e}\n```\n\nedit: I put a breakpoint in stonesense ContentLoader:103, `materialNameList.material_list_size()` is 0. So I guess stonesense isn't getting the materials, etc. from RemoteFortressReader?\n\nedit2: okay so just ignore this comment.... I had web server for work already open on port 5000 so dfhack couldn't bind to that port.... Stonesense still isn't working though. \n\nedit3: wtf! my locally compiled stonesense/dfhack doesn't work, but the linux release version does... I can't believe I lost all that time debugging when it was my work api server all along. Oh well, at least losing is fun.","files":null}]}